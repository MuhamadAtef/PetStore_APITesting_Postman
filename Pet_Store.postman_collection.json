{
	"info": {
		"_postman_id": "517b9885-7da0-4a38-8e09-aae27731a971",
		"name": "Pet_Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Finds pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"validate finding pet by status successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"pm.test(\"Check finding available status in the response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"available\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check finding pending status in the response\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"pending\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/pet/findByStatus?status=available&status=pending&status=sold\n&",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "status",
									"value": "sold\n"
								},
								{
									"key": "",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add new pet successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 500,\r\n  \"category\": {\r\n    \"id\": 5,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}/pet",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"update an existing pet(ID:500) successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"check updated record by searching on max\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"max\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 500,\r\n    \"category\": {\r\n        \"id\": 50,\r\n        \"name\": \"max\"\r\n    },\r\n    \"name\": \"doggie\",\r\n    \"photoUrls\": [\r\n        \"string\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 0,\r\n            \"name\": \"string\"\r\n        }\r\n    ],\r\n    \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}/pet",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"find the updated pet ID(500) successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/pet/500",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"pet",
								"500"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"delete pet by id successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "auth_key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/pet/69640082",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"pet",
								"69640082"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "find purchase order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"validate purchase order by id \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/store/order/9",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"store",
								"order",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "find the pet inventories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"validate purchase order by id \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/store/inventory",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "add a new pet order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"add a new pet order successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 100,\r\n  \"petId\": 500,\r\n  \"quantity\": 25,\r\n  \"shipDate\": \"2022-04-27T08:14:55.196Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}/store/order",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"delete pet order successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/store/order/100",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"store",
								"order",
								"100"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"create a new user successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"Muhammed1\",\r\n    \"firstName\": \"Muhammad\",\r\n    \"lastName\": \"atef\",\r\n    \"email\": \"test@hotmail.com\",\r\n    \"password\": \"123456\",\r\n    \"phone\": \"02132564\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}/user/createWithList",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "find user by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"validate find user by username\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/user/Muhammed1",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"Muhammed1"
							]
						}
					},
					"response": []
				},
				{
					"name": "log user into the system",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/user/login?username=Muhammed1&password=123456",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "Muhammed1"
								},
								{
									"key": "password",
									"value": "123456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}/user/Muhammed1",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"Muhammed1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"delete user by username successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/user/Muhammed1",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"Muhammed1"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All users loggedout successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/user/logout",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}